vendor_name = ModelSim
source_file = 1, /home/sl/git/test/fpga_test/fpga_test.v
source_file = 1, /home/sl/git/test/fpga_test/assignments.txt
source_file = 1, /home/sl/git/test/fpga_test/hex_to_7seg.v
source_file = 1, /home/sl/git/test/fpga_test/debouncer.v
source_file = 1, /home/sl/git/test/fpga_test/db/fpga_test.cbx.xml
design_name = fpga_test
instance = comp, \DIG1~output , DIG1~output, fpga_test, 1
instance = comp, \DIG2~output , DIG2~output, fpga_test, 1
instance = comp, \DIG3~output , DIG3~output, fpga_test, 1
instance = comp, \DIG4~output , DIG4~output, fpga_test, 1
instance = comp, \SEG0~output , SEG0~output, fpga_test, 1
instance = comp, \SEG1~output , SEG1~output, fpga_test, 1
instance = comp, \SEG2~output , SEG2~output, fpga_test, 1
instance = comp, \SEG3~output , SEG3~output, fpga_test, 1
instance = comp, \SEG4~output , SEG4~output, fpga_test, 1
instance = comp, \SEG5~output , SEG5~output, fpga_test, 1
instance = comp, \SEG6~output , SEG6~output, fpga_test, 1
instance = comp, \LED1~output , LED1~output, fpga_test, 1
instance = comp, \CLK~input , CLK~input, fpga_test, 1
instance = comp, \CLK~inputclkctrl , CLK~inputclkctrl, fpga_test, 1
instance = comp, \divider[0]~48 , divider[0]~48, fpga_test, 1
instance = comp, \divider[0] , divider[0], fpga_test, 1
instance = comp, \divider[1]~16 , divider[1]~16, fpga_test, 1
instance = comp, \divider[1] , divider[1], fpga_test, 1
instance = comp, \divider[2]~18 , divider[2]~18, fpga_test, 1
instance = comp, \divider[2] , divider[2], fpga_test, 1
instance = comp, \divider[3]~20 , divider[3]~20, fpga_test, 1
instance = comp, \divider[3] , divider[3], fpga_test, 1
instance = comp, \divider[4]~22 , divider[4]~22, fpga_test, 1
instance = comp, \divider[4] , divider[4], fpga_test, 1
instance = comp, \divider[5]~24 , divider[5]~24, fpga_test, 1
instance = comp, \divider[5] , divider[5], fpga_test, 1
instance = comp, \divider[6]~26 , divider[6]~26, fpga_test, 1
instance = comp, \divider[6] , divider[6], fpga_test, 1
instance = comp, \divider[7]~28 , divider[7]~28, fpga_test, 1
instance = comp, \divider[7] , divider[7], fpga_test, 1
instance = comp, \divider[8]~30 , divider[8]~30, fpga_test, 1
instance = comp, \divider[8] , divider[8], fpga_test, 1
instance = comp, \divider[9]~32 , divider[9]~32, fpga_test, 1
instance = comp, \divider[9] , divider[9], fpga_test, 1
instance = comp, \divider[10]~34 , divider[10]~34, fpga_test, 1
instance = comp, \divider[10] , divider[10], fpga_test, 1
instance = comp, \divider[11]~36 , divider[11]~36, fpga_test, 1
instance = comp, \divider[11] , divider[11], fpga_test, 1
instance = comp, \divider[12]~38 , divider[12]~38, fpga_test, 1
instance = comp, \divider[12] , divider[12], fpga_test, 1
instance = comp, \divider[13]~40 , divider[13]~40, fpga_test, 1
instance = comp, \divider[13] , divider[13], fpga_test, 1
instance = comp, \divider[14]~42 , divider[14]~42, fpga_test, 1
instance = comp, \divider[14] , divider[14], fpga_test, 1
instance = comp, \divider[15]~44 , divider[15]~44, fpga_test, 1
instance = comp, \divider[15] , divider[15], fpga_test, 1
instance = comp, \divider[16]~46 , divider[16]~46, fpga_test, 1
instance = comp, \divider[16] , divider[16], fpga_test, 1
instance = comp, \divider[16]~clkctrl , divider[16]~clkctrl, fpga_test, 1
instance = comp, \digit_counter[0]~1 , digit_counter[0]~1, fpga_test, 1
instance = comp, \digit_counter[0] , digit_counter[0], fpga_test, 1
instance = comp, \digit_counter[1]~0 , digit_counter[1]~0, fpga_test, 1
instance = comp, \digit_counter[1] , digit_counter[1], fpga_test, 1
instance = comp, \Decoder0~0 , Decoder0~0, fpga_test, 1
instance = comp, \Decoder0~1 , Decoder0~1, fpga_test, 1
instance = comp, \Decoder0~2 , Decoder0~2, fpga_test, 1
instance = comp, \Decoder0~3 , Decoder0~3, fpga_test, 1
instance = comp, \KEY4~input , KEY4~input, fpga_test, 1
instance = comp, \deb4|always0~0 , deb4|always0~0, fpga_test, 1
instance = comp, \deb4|counter[1]~5 , deb4|counter[1]~5, fpga_test, 1
instance = comp, \deb4|counter[1]~6 , deb4|counter[1]~6, fpga_test, 1
instance = comp, \deb4|counter~8 , deb4|counter~8, fpga_test, 1
instance = comp, \deb4|counter[1] , deb4|counter[1], fpga_test, 1
instance = comp, \deb4|counter[2]~9 , deb4|counter[2]~9, fpga_test, 1
instance = comp, \deb4|counter[2] , deb4|counter[2], fpga_test, 1
instance = comp, \deb4|counter[3]~11 , deb4|counter[3]~11, fpga_test, 1
instance = comp, \deb4|counter[3] , deb4|counter[3], fpga_test, 1
instance = comp, \deb4|Equal0~0 , deb4|Equal0~0, fpga_test, 1
instance = comp, \deb4|counter[0]~3 , deb4|counter[0]~3, fpga_test, 1
instance = comp, \deb4|counter[0] , deb4|counter[0], fpga_test, 1
instance = comp, \deb4|Equal1~0 , deb4|Equal1~0, fpga_test, 1
instance = comp, \deb4|out~0 , deb4|out~0, fpga_test, 1
instance = comp, \deb4|out[0]~feeder , deb4|out[0]~feeder, fpga_test, 1
instance = comp, \deb4|out[0] , deb4|out[0], fpga_test, 1
instance = comp, \deb4|out[0]~clkctrl , deb4|out[0]~clkctrl, fpga_test, 1
instance = comp, \digit4[0]~5 , digit4[0]~5, fpga_test, 1
instance = comp, \digit4[2]~9 , digit4[2]~9, fpga_test, 1
instance = comp, \digit4[3]~11 , digit4[3]~11, fpga_test, 1
instance = comp, \digit4[3] , digit4[3], fpga_test, 1
instance = comp, \digit4[4]~13 , digit4[4]~13, fpga_test, 1
instance = comp, \digit4[4] , digit4[4], fpga_test, 1
instance = comp, \LessThan3~0 , LessThan3~0, fpga_test, 1
instance = comp, \LessThan3~1 , LessThan3~1, fpga_test, 1
instance = comp, \digit4[0] , digit4[0], fpga_test, 1
instance = comp, \digit4[1]~7 , digit4[1]~7, fpga_test, 1
instance = comp, \digit4[1] , digit4[1], fpga_test, 1
instance = comp, \digit4[2] , digit4[2], fpga_test, 1
instance = comp, \KEY2~input , KEY2~input, fpga_test, 1
instance = comp, \deb2|counter[0]~3 , deb2|counter[0]~3, fpga_test, 1
instance = comp, \deb2|counter[0] , deb2|counter[0], fpga_test, 1
instance = comp, \deb2|counter[1]~5 , deb2|counter[1]~5, fpga_test, 1
instance = comp, \deb2|counter[1]~6 , deb2|counter[1]~6, fpga_test, 1
instance = comp, \deb2|counter~8 , deb2|counter~8, fpga_test, 1
instance = comp, \deb2|counter[1] , deb2|counter[1], fpga_test, 1
instance = comp, \deb2|counter[2]~9 , deb2|counter[2]~9, fpga_test, 1
instance = comp, \deb2|counter[3]~11 , deb2|counter[3]~11, fpga_test, 1
instance = comp, \deb2|counter[3] , deb2|counter[3], fpga_test, 1
instance = comp, \deb2|Equal0~0 , deb2|Equal0~0, fpga_test, 1
instance = comp, \deb2|always0~0 , deb2|always0~0, fpga_test, 1
instance = comp, \deb2|counter[2] , deb2|counter[2], fpga_test, 1
instance = comp, \deb2|Equal1~0 , deb2|Equal1~0, fpga_test, 1
instance = comp, \deb2|out~0 , deb2|out~0, fpga_test, 1
instance = comp, \deb2|out[0]~feeder , deb2|out[0]~feeder, fpga_test, 1
instance = comp, \deb2|out[0] , deb2|out[0], fpga_test, 1
instance = comp, \deb2|out[0]~clkctrl , deb2|out[0]~clkctrl, fpga_test, 1
instance = comp, \digit2[0]~5 , digit2[0]~5, fpga_test, 1
instance = comp, \digit2[2]~9 , digit2[2]~9, fpga_test, 1
instance = comp, \digit2[3]~11 , digit2[3]~11, fpga_test, 1
instance = comp, \digit2[3] , digit2[3], fpga_test, 1
instance = comp, \digit2[4]~13 , digit2[4]~13, fpga_test, 1
instance = comp, \digit2[4] , digit2[4], fpga_test, 1
instance = comp, \LessThan1~0 , LessThan1~0, fpga_test, 1
instance = comp, \LessThan1~1 , LessThan1~1, fpga_test, 1
instance = comp, \digit2[0] , digit2[0], fpga_test, 1
instance = comp, \digit2[1]~7 , digit2[1]~7, fpga_test, 1
instance = comp, \digit2[1] , digit2[1], fpga_test, 1
instance = comp, \digit2[2] , digit2[2], fpga_test, 1
instance = comp, \KEY1~input , KEY1~input, fpga_test, 1
instance = comp, \deb1|always0~0 , deb1|always0~0, fpga_test, 1
instance = comp, \deb1|counter[1]~5 , deb1|counter[1]~5, fpga_test, 1
instance = comp, \deb1|counter[1]~6 , deb1|counter[1]~6, fpga_test, 1
instance = comp, \deb1|counter~8 , deb1|counter~8, fpga_test, 1
instance = comp, \deb1|counter[1] , deb1|counter[1], fpga_test, 1
instance = comp, \deb1|counter[2]~9 , deb1|counter[2]~9, fpga_test, 1
instance = comp, \deb1|counter[2] , deb1|counter[2], fpga_test, 1
instance = comp, \deb1|counter[3]~11 , deb1|counter[3]~11, fpga_test, 1
instance = comp, \deb1|counter[3] , deb1|counter[3], fpga_test, 1
instance = comp, \deb1|Equal0~0 , deb1|Equal0~0, fpga_test, 1
instance = comp, \deb1|counter[0]~3 , deb1|counter[0]~3, fpga_test, 1
instance = comp, \deb1|counter[0] , deb1|counter[0], fpga_test, 1
instance = comp, \deb1|Equal1~0 , deb1|Equal1~0, fpga_test, 1
instance = comp, \deb1|out~0 , deb1|out~0, fpga_test, 1
instance = comp, \deb1|out[0]~feeder , deb1|out[0]~feeder, fpga_test, 1
instance = comp, \deb1|out[0] , deb1|out[0], fpga_test, 1
instance = comp, \deb1|out[0]~clkctrl , deb1|out[0]~clkctrl, fpga_test, 1
instance = comp, \digit1[0]~5 , digit1[0]~5, fpga_test, 1
instance = comp, \digit1[2]~9 , digit1[2]~9, fpga_test, 1
instance = comp, \digit1[3]~11 , digit1[3]~11, fpga_test, 1
instance = comp, \digit1[3] , digit1[3], fpga_test, 1
instance = comp, \digit1[4]~13 , digit1[4]~13, fpga_test, 1
instance = comp, \digit1[4] , digit1[4], fpga_test, 1
instance = comp, \LessThan0~0 , LessThan0~0, fpga_test, 1
instance = comp, \LessThan0~1 , LessThan0~1, fpga_test, 1
instance = comp, \digit1[0] , digit1[0], fpga_test, 1
instance = comp, \digit1[1]~7 , digit1[1]~7, fpga_test, 1
instance = comp, \digit1[1] , digit1[1], fpga_test, 1
instance = comp, \digit1[2] , digit1[2], fpga_test, 1
instance = comp, \KEY3~input , KEY3~input, fpga_test, 1
instance = comp, \deb3|counter[0]~3 , deb3|counter[0]~3, fpga_test, 1
instance = comp, \deb3|counter[0] , deb3|counter[0], fpga_test, 1
instance = comp, \deb3|counter[1]~5 , deb3|counter[1]~5, fpga_test, 1
instance = comp, \deb3|counter[1]~6 , deb3|counter[1]~6, fpga_test, 1
instance = comp, \deb3|counter~8 , deb3|counter~8, fpga_test, 1
instance = comp, \deb3|counter[1] , deb3|counter[1], fpga_test, 1
instance = comp, \deb3|counter[2]~9 , deb3|counter[2]~9, fpga_test, 1
instance = comp, \deb3|counter[3]~11 , deb3|counter[3]~11, fpga_test, 1
instance = comp, \deb3|counter[3] , deb3|counter[3], fpga_test, 1
instance = comp, \deb3|Equal0~0 , deb3|Equal0~0, fpga_test, 1
instance = comp, \deb3|always0~0 , deb3|always0~0, fpga_test, 1
instance = comp, \deb3|counter[2] , deb3|counter[2], fpga_test, 1
instance = comp, \deb3|Equal1~0 , deb3|Equal1~0, fpga_test, 1
instance = comp, \deb3|out~0 , deb3|out~0, fpga_test, 1
instance = comp, \deb3|out[0]~feeder , deb3|out[0]~feeder, fpga_test, 1
instance = comp, \deb3|out[0] , deb3|out[0], fpga_test, 1
instance = comp, \deb3|out[0]~clkctrl , deb3|out[0]~clkctrl, fpga_test, 1
instance = comp, \digit3[0]~5 , digit3[0]~5, fpga_test, 1
instance = comp, \digit3[2]~9 , digit3[2]~9, fpga_test, 1
instance = comp, \digit3[3]~11 , digit3[3]~11, fpga_test, 1
instance = comp, \digit3[3] , digit3[3], fpga_test, 1
instance = comp, \digit3[4]~13 , digit3[4]~13, fpga_test, 1
instance = comp, \digit3[4] , digit3[4], fpga_test, 1
instance = comp, \LessThan2~0 , LessThan2~0, fpga_test, 1
instance = comp, \LessThan2~1 , LessThan2~1, fpga_test, 1
instance = comp, \digit3[0] , digit3[0], fpga_test, 1
instance = comp, \digit3[1]~7 , digit3[1]~7, fpga_test, 1
instance = comp, \digit3[1] , digit3[1], fpga_test, 1
instance = comp, \digit3[2] , digit3[2], fpga_test, 1
instance = comp, \Mux2~0 , Mux2~0, fpga_test, 1
instance = comp, \Mux2~1 , Mux2~1, fpga_test, 1
instance = comp, \Mux3~0 , Mux3~0, fpga_test, 1
instance = comp, \Mux3~1 , Mux3~1, fpga_test, 1
instance = comp, \Mux1~0 , Mux1~0, fpga_test, 1
instance = comp, \Mux1~1 , Mux1~1, fpga_test, 1
instance = comp, \Mux4~0 , Mux4~0, fpga_test, 1
instance = comp, \Mux4~1 , Mux4~1, fpga_test, 1
instance = comp, \hs|WideOr0~0 , hs|WideOr0~0, fpga_test, 1
instance = comp, \hs|WideOr1~0 , hs|WideOr1~0, fpga_test, 1
instance = comp, \hs|WideOr2~0 , hs|WideOr2~0, fpga_test, 1
instance = comp, \hs|WideOr3~0 , hs|WideOr3~0, fpga_test, 1
instance = comp, \hs|WideOr4~0 , hs|WideOr4~0, fpga_test, 1
instance = comp, \hs|WideOr5~0 , hs|WideOr5~0, fpga_test, 1
instance = comp, \hs|WideOr6~0 , hs|WideOr6~0, fpga_test, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
